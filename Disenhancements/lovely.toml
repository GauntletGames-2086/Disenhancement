[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# From Steamodded
# get_badge_colour()
[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = 'return G.BADGE_COL[key] or {1, 0, 0, 1}'
position = 'before'
match_indent = true
payload = '''
for k, v in pairs(SMODS.Disenhancements) do
	G.BADGE_COL[k:lower()..'_disenhancement'] = v.colour
end
'''

# Card:draw()
[[patches]]
[patches.regex]
target = "card.lua"
pattern = '''(?<indent>[\t ]*)if self\.ability\.name == 'The Soul' and \(self\.config\.center\.discovered or self\.bypass_discovery_center\) then'''
position = "before"
line_prepend = "$indent"
payload = '''
--asdf
for k, v in pairs(SMODS.Disenhancements) do
    if self.ability.disenhancement and self.ability.disenhancement == v.key then
        print("Setting disenhancement Shader")
        G.shared_disenhancements[v.key].role.draw_major = self
        G.shared_disenhancements[v.key]:draw_shader('dissolve', nil, nil, nil, self.children.center)
        G.shared_disenhancements[v.key]:draw_shader('negative_shine', nil, self.ARGS.send_to_shader)
    end
end
'''

# generate_card_ui()
[[patches]]
[patches.regex]
target = 'functions/common_events.lua'
pattern = "(?<indent>[\t ]*)if v == 'eternal'"
line_prepend = '$indent'
position = 'before'
payload = '''

if SMODS.Disenhancement.reverse_lookup[v] then info_queue[#info_queue+1] = {key = v, set = 'Other' } end
if SMODS.Disenhancements[v] then info_queue[#info_queue+1] = {key = v, set = 'Other' } end
'''

[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = 'if self.sticker then loc_vars = loc_vars or {}; loc_vars.sticker=self.sticker end'
position = 'after'
match_indent = true
payload = '''
if self.ability.disenhancement then badges[#badges + 1] = string.lower(self.ability.disenhancement)..'_disenhancement' end
'''

[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = 'perma_bonus = self.ability and self.ability.perma_bonus or 0,'
position = 'after'
match_indent = true
payload = '''
disenhancement = self.ability and self.ability.disenhancement or nil,
'''

[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = "if self.edition or self.seal or self.ability.eternal or self.ability.rental or self.ability.perishable or self.sticker or self.ability.set == 'Spectral' or self.debuff or self.greyed or self.ability.name == 'The Soul' or self.ability.set == 'Voucher' or self.ability.set == 'Booster' or self.config.center.soul_pos or self.config.center.demo then"
position = 'at'
match_indent = true
payload = "if self.edition or self.seal or self.ability.eternal or self.ability.rental or self.ability.perishable or self.sticker or self.ability.set == 'Spectral' or self.debuff or self.greyed or self.ability.name == 'The Soul' or self.ability.set == 'Voucher' or self.ability.set == 'Booster' or self.config.center.soul_pos or self.config.center.demo and self.ability.disenhancement then"